services:

  bugreportdb:
    image: mariadb:10.9
    networks: 
      - net_bugreport_backend
    container_name: bugreportserver_database
    user: root
    restart: always
    environment:
      - "MYSQL_ROOT_PASSWORD=secret"
      - "MYSQL_DATABASE=bugreport"
      - "MYSQL_USER=buguser"
      - "MYSQL_PASSWORD=unicorn"
      - "TZ=Europe/Sofia"
    volumes:
      - bugreportserver-mariadb:/var/lib/mysql
    ports:
      - 5507:3306
  
  bugreportadmin:
    image: adminer
    restart: always
    networks: 
      - net_bugreport_backend
    environment: 
      ADMINER_DEFAULT_SERVER: bugreportdb
    ports:
      - 8082:8080

  bugreportweb:
    networks: 
      - net_bugreport_backend
    build:
      network: host
      context: ./BugReportWeb
      dockerfile: ./Dockerfile
      args:
        username: ${NUGET_USERNAME}
        token: ${NUGET_TOKEN}
    ports:
      - "5208:80"
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=DevelopmentDocker
    depends_on: 
      - bugreportserver

  bugreportserver:
    networks: 
      - net_bugreport_backend
    build:
      network: host
      context: ./Server
      dockerfile: ./Dockerfile
      args:
        username: ${NUGET_USERNAME}
        token: ${NUGET_TOKEN}
    ports:
      - "5200:80"
    depends_on: 
      - bugreportdb
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=DevelopmentDocker
    volumes:
      - bugreportserver-reportdisk:/BugReports
      #- ./BugReports:/BugReports2

networks:
  net_bugreport_backend:
    name: bugreport_backend

volumes:
  # docker volume create bugreportserver-mariadb
  bugreportserver-mariadb:
    external: true  

  # docker volume create bugreportserver-reportdisk
  bugreportserver-reportdisk:
    external: true  
